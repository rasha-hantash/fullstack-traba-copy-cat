version: '3'
vars:
  TAG:
    sh: echo "$(date +'%Y-%m-%d-%H:%M')-$(git rev-parse  HEAD)"
  ENV: '{{.ENV | default "staging"}}'  # Add default ENV here

tasks:
  fetch-ecr-arn:
      internal: true
      cmds:
        - |
          ECR_ARN=$(aws ecr describe-repositories --repository-names traba-{{.ENV}} --query 'repositories[0].repositoryUri' --output text)
          echo "::set-output name=ECR_ARN::$ECR_ARN"

  frontend:docker:staging:
    desc: Build and push frontend image
    vars:
      ECR_ARN:
        sh: task fetch-ecr-arn | awk -F'"' '{print $4}'
    cmds:
      - docker build --build-arg ENV={{.ENV}} -f frontend/Dockerfile -t {{.ECR_ARN}}:frontend-{{.TAG}} .
      - docker push {{.ECR_ARN}}:frontend-{{.TAG}}

  backend:docker:staging:
    desc: Build and push backend image
    vars:
      ECR_ARN:
        sh: task fetch-ecr-arn | awk -F'"' '{print $4}'
    cmds:
      - docker build --build-arg ENV={{.ENV}} -f backend/Dockerfile -t {{.ECR_ARN}}:backend-{{.TAG}} .
      - docker push {{.ECR_ARN}}:backend-{{.TAG}}

  terraform:apply:staging:
    desc: Apply terraform with specific image tags
    dir: infra
    cmds:
      - terraform init
      - terraform apply -var-file=staging.tfvars 
        -var="ecr_repository_url={{.ECR_ARN}}" 
        -var="frontend_image_tag=frontend-{{.TAG}}" 
        -var="backend_image_tag=backend-{{.TAG}}"
        -auto-approve

  deploy:staging:
    desc: Full deployment with specified tag
    cmds:
      - task: ecr:login
      - task: frontend:docker:staging
      - task: backend:docker:staging
      - task: terraform:apply:staging

  migrate:create:
      vars:
          NAME: "{{.NAME}}"
      cmds:
        - migrate create -ext sql -dir platform/sql/migrations/ -seq {{.NAME}}

  local:migrate:up:
      cmds:
        - migrate -path platform/sql/migrations/ -database "postgresql://admin:your_password@localhost:5438/traba?sslmode=disable" -verbose up

  local:migrate:down:
      cmds:
        - migrate -path platform/sql/migrations/ -database "postgresql://admin:your_password@localhost:5438/traba?sslmode=disable" -verbose down

  remote:migrate:up:
    vars:
      CONNECTION_STRING: "{{.CONNECTION_STRING}}"
    cmds:
      - migrate -path platform/sql/migrations/ -database "{{.CONNECTION_STRING}}" -verbose up

  remote:migrate:down:
    vars:
      CONNECTION_STRING: "{{.CONNECTION_STRING}}"
    cmds:
      - migrate -path platform/sql/migrations/ -database "{{.CONNECTION_STRING}}" -verbose down

  local:seed:db:
    desc: Seed the database with a local SQL file
    cmds:
      - |
        cat platform/sql/seed/seed-db.sql | docker exec -i -e PGPASSWORD=your_password fullstack-traba-copy-cat-postgres-1 psql -U admin -d traba
  local:db:shell:
    desc: Open a shell to the database
    cmds:
      - docker exec -it fullstack-traba-copy-cat-postgres-1 psql -U admin -d traba
